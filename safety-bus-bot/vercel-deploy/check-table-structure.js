import dotenv from 'dotenv';
dotenv.config();

import { createSupabaseClient } from './lib/db.js';

async function checkTableStructure() {
  const supabase = createSupabaseClient();
  
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_line_links ‡πÅ‡∏•‡∏∞ parent_line_links...\n');

  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_line_links
    console.log('üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_line_links:');
    const { data: studentLinks, error: studentError } = await supabase
      .from('student_line_links')
      .select('*')
      .limit(5);

    if (studentError) {
      console.log('‚ùå Error:', studentError.message);
    } else {
      console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${studentLinks.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      if (studentLinks.length > 0) {
        console.log('üìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:');
        Object.keys(studentLinks[0]).forEach(key => {
          console.log(`  - ${key}: ${typeof studentLinks[0][key]} (${studentLinks[0][key]})`);
        });
        console.log('\nüìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
        studentLinks.forEach((link, index) => {
          console.log(`  ${index + 1}. Student ID: ${link.student_id}, LINE ID: ${link.line_user_id || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}, Active: ${link.active}`);
        });
      }
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á parent_line_links
    console.log('üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á parent_line_links:');
    const { data: parentLinks, error: parentError } = await supabase
      .from('parent_line_links')
      .select('*')
      .limit(5);

    if (parentError) {
      console.log('‚ùå Error:', parentError.message);
    } else {
      console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${parentLinks.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      if (parentLinks.length > 0) {
        console.log('üìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:');
        Object.keys(parentLinks[0]).forEach(key => {
          console.log(`  - ${key}: ${typeof parentLinks[0][key]} (${parentLinks[0][key]})`);
        });
        console.log('\nüìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
        parentLinks.forEach((link, index) => {
          console.log(`  ${index + 1}. Parent ID: ${link.parent_id}, LINE ID: ${link.line_user_id || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}, Active: ${link.active}`);
        });
      }
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á students ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
    console.log('üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á students (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á):');
    const { data: students, error: studentsError } = await supabase
      .from('students')
      .select('student_id, student_name, parent_id, link_code')
      .limit(3);

    if (studentsError) {
      console.log('‚ùå Error:', studentsError.message);
    } else {
      console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${students.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      students.forEach((student, index) => {
        console.log(`  ${index + 1}. Student ID: ${student.student_id}, Name: ${student.student_name}, Parent ID: ${student.parent_id}, Link Code: ${student.link_code || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
      });
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents
    console.log('üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á):');
    const { data: parents, error: parentsError } = await supabase
      .from('parents')
      .select('parent_id, parent_name, parent_phone')
      .limit(3);

    if (parentsError) {
      console.log('‚ùå Error:', parentsError.message);
    } else {
      console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${parents.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      parents.forEach((parent, index) => {
        console.log(`  ${index + 1}. Parent ID: ${parent.parent_id}, Name: ${parent.parent_name}, Phone: ${parent.parent_phone}`);
      });
    }

    console.log('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:');
    console.log('1. ‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_line_links ‡πÅ‡∏•‡∏∞ parent_line_links ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
    console.log('2. ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå line_user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö LINE User ID');
    console.log('3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï LINE User ID ‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πÅ‡∏Å‡∏ô QR Code');
    console.log('4. ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  }
}

checkTableStructure().catch(console.error);