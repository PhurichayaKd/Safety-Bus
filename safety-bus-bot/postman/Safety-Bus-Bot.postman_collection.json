{
  "info": {
    "_postman_id": "safety-bus-bot-api-tests",
    "name": "Safety Bus Bot API Tests",
    "description": "Collection สำหรับทดสอบ API ของ Safety Bus Bot\n\nการใช้งาน:\n1. Import collection นี้ใน Postman\n2. ตั้งค่า Environment Variables\n3. รัน tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "your_api_secret_key",
      "type": "string"
    },
    {
      "key": "line_user_id",
      "value": "U1234567890abcdef",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has status ok', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('ok');",
              "});",
              "",
              "pm.test('Response has timestamp', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.timestamp).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "health"
          ]
        },
        "description": "ตรวจสอบสถานะของ API server"
      },
      "response": []
    },
    {
      "name": "RFID Scan - Board Bus",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response indicates success', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test('Response has message', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"student_id\": \"STU001\",\n  \"scan_type\": \"board\",\n  \"bus_id\": \"BUS001\",\n  \"location\": {\n    \"latitude\": 13.7563,\n    \"longitude\": 100.5018\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/rfid-scan",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "rfid-scan"
          ]
        },
        "description": "ทดสอบการสแกน RFID เมื่อนักเรียนขึ้นรถ"
      },
      "response": []
    },
    {
      "name": "RFID Scan - Exit Bus",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response indicates success', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"student_id\": \"STU001\",\n  \"scan_type\": \"exit\",\n  \"bus_id\": \"BUS001\",\n  \"location\": {\n    \"latitude\": 13.7563,\n    \"longitude\": 100.5018\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/rfid-scan",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "rfid-scan"
          ]
        },
        "description": "ทดสอบการสแกน RFID เมื่อนักเรียนลงรถ"
      },
      "response": []
    },
    {
      "name": "Bus Location Update",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response indicates success', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"bus_id\": \"BUS001\",\n  \"latitude\": 13.7563,\n  \"longitude\": 100.5018,\n  \"speed\": 45.5,\n  \"heading\": 180.0\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/bus-location",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "bus-location"
          ]
        },
        "description": "อัพเดทตำแหน่งรถบัส"
      },
      "response": []
    },
    {
      "name": "Emergency Alert - Breakdown",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response indicates success', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test('Notifications were sent', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.notifications_sent).to.be.a('number');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"bus_id\": \"BUS001\",\n  \"emergency_type\": \"breakdown\",\n  \"description\": \"Engine problem - bus stopped\",\n  \"location\": {\n    \"latitude\": 13.7563,\n    \"longitude\": 100.5018\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/emergency",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "emergency"
          ]
        },
        "description": "แจ้งเหตุฉุกเฉิน - รถเสีย"
      },
      "response": []
    },
    {
      "name": "Emergency Alert - Accident",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response indicates success', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"bus_id\": \"BUS001\",\n  \"emergency_type\": \"accident\",\n  \"description\": \"Minor collision with another vehicle\",\n  \"location\": {\n    \"latitude\": 13.7563,\n    \"longitude\": 100.5018\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/emergency",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "emergency"
          ]
        },
        "description": "แจ้งเหตุฉุกเฉิน - อุบัติเหตุ"
      },
      "response": []
    },
    {
      "name": "LINE Webhook Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200 or 400', function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
              "});",
              "",
              "// 400 is expected due to signature validation",
              "if (pm.response.code === 400) {",
              "    pm.test('Error is about signature validation', function () {",
              "        const jsonData = pm.response.json();",
              "        pm.expect(jsonData.error).to.include('signature');",
              "    });",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-Line-Signature",
            "value": "test-signature"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"events\": [\n    {\n      \"type\": \"message\",\n      \"message\": {\n        \"type\": \"text\",\n        \"text\": \"test\"\n      },\n      \"source\": {\n        \"type\": \"user\",\n        \"userId\": \"{{line_user_id}}\"\n      },\n      \"timestamp\": 1640995200000,\n      \"replyToken\": \"test-reply-token\"\n    }\n  ]\n}"
        },
        "url": {
          "raw": "{{base_url}}/webhook",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "webhook"
          ]
        },
        "description": "ทดสอบ LINE Webhook endpoint (จะได้ 400 error เนื่องจาก signature validation)"
      },
      "response": []
    },
    {
      "name": "Invalid API Key Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 401', function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test('Error message about authentication', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.error).to.include('Invalid API key');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "invalid-api-key"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"student_id\": \"STU001\",\n  \"scan_type\": \"board\",\n  \"bus_id\": \"BUS001\",\n  \"location\": {\n    \"latitude\": 13.7563,\n    \"longitude\": 100.5018\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/rfid-scan",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "rfid-scan"
          ]
        },
        "description": "ทดสอบการใช้ API Key ที่ไม่ถูกต้อง (ควรได้ 401 error)"
      },
      "response": []
    },
    {
      "name": "Invalid Request Data Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Error message about validation', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.error).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"invalid_field\": \"invalid_value\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/rfid-scan",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "rfid-scan"
          ]
        },
        "description": "ทดสอบการส่งข้อมูลที่ไม่ถูกต้อง (ควรได้ 400 error)"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set dynamic timestamp for requests",
          "pm.globals.set('timestamp', Date.now());",
          "",
          "// Log request details",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log response details",
          "console.log('Response status:', pm.response.status);",
          "console.log('Response time:', pm.response.responseTime + 'ms');",
          "",
          "// Common test for response time",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Common test for content type",
          "if (pm.response.status !== 404) {",
          "    pm.test('Content-Type is application/json', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    });",
          "}"
        ]
      }
    }
  ]
}