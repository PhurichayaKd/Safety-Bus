require('dotenv').config({ path: '../safety-bus-bot/vercel-deploy/.env.local' });

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Missing Supabase configuration');
  console.log('SUPABASE_URL:', supabaseUrl ? 'Set' : 'Missing');
  console.log('SUPABASE_SERVICE_ROLE_KEY:', supabaseServiceKey ? 'Set' : 'Missing');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function updateFunction() {
  console.log('üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡πÉ‡∏ô Supabase...\n');

  try {
    // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå SQL
    const sqlPath = path.join(__dirname, 'compatible-record-rfid-scan.sql');
    const sqlContent = fs.readFileSync(sqlPath, 'utf8');

    console.log('üìñ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå SQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL
    const { data, error } = await supabase.rpc('exec_sql', {
      sql: sqlContent
    });

    if (error) {
      console.error('‚ùå Error updating function:', error.message);
      
      // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô
      console.log('üîÑ ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...');
      
      const { data: directData, error: directError } = await supabase
        .from('pg_stat_statements')
        .select('*')
        .limit(1);

      if (directError) {
        console.log('üí° ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÑ‡∏î‡πâ');
        console.log('üìã ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î SQL ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå compatible-record-rfid-scan.sql');
        console.log('üìã ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡πÉ‡∏ô Supabase Dashboard > SQL Editor');
      }
    } else {
      console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      
      // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
      console.log('\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß...');
      
      const { data: testResult, error: testError } = await supabase
        .rpc('record_rfid_scan', {
          p_rfid_code: 'F3C9DC34',
          p_driver_id: 1,
          p_latitude: 13.7563,
          p_longitude: 100.5018,
          p_location_type: 'go'
        });

      if (testError) {
        console.error('‚ùå Test Error:', testError.message);
      } else {
        console.log('‚úÖ Test Result:', JSON.stringify(testResult, null, 2));
      }
    }

  } catch (error) {
    console.error('‚ùå Unexpected error:', error.message);
  }
}

updateFunction();