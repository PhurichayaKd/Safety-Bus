// scripts/test-postback.js
import { handleLeaveFormPostback, handleLeaveReasonInput, userFormStates } from '../lib/handlers.js';
import dotenv from 'dotenv';

// ‡πÇ‡∏´‡∏•‡∏î environment variables
dotenv.config();

// Mock LINE client ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå line.js
import { lineClient } from '../lib/line.js';

// ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°
const originalReplyMessage = lineClient.replyMessage;

// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ mock function
lineClient.replyMessage = async (replyToken, message) => {
  console.log('üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° reply (mock):');
  console.log('üéØ Reply Token:', replyToken);
  console.log('üí¨ Message:', JSON.stringify(message, null, 2));
  return { success: true };
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°
function restoreLineClient() {
  lineClient.replyMessage = originalReplyMessage;
}

async function testPostback() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö postback events...');
  
  const userId = 'tartar-c-v';
  
  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö postback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤
    console.log('\n1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤ (‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢)...');
    const postbackEvent = {
      type: 'postback',
      postback: {
        data: 'leave_form_sick_10_2025-09-18'
      },
      source: {
        userId: userId
      },
      replyToken: 'test-reply-token-1'
    };
    
    await handleLeaveFormPostback(postbackEvent, 'leave_form_sick_10_2025-09-18');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö form state
    console.log('\nüìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:');
    console.log(userFormStates.get(userId));
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
    console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤...');
    const reasonEvent = {
      type: 'message',
      message: {
        type: 'text',
        text: '‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ'
      },
      source: {
        userId: userId
      },
      replyToken: 'test-reply-token-2'
    };
    
    await handleLeaveReasonInput(reasonEvent, '‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ');
    
    console.log('\n‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö postback ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    console.error('Stack trace:', error.stack);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testPostback();