import dotenv from 'dotenv';
dotenv.config({ path: '.env.local' });

async function testDriverNotification() {
  console.log('üß™ Testing Driver Status Notification...\n');

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment variables
  console.log('üìã Environment Variables Check:');
  console.log('- LINE_CHANNEL_ACCESS_TOKEN:', process.env.LINE_CHANNEL_ACCESS_TOKEN ? '‚úÖ Set' : '‚ùå Not set');
  console.log('- LINE_CHANNEL_SECRET:', process.env.LINE_CHANNEL_SECRET ? '‚úÖ Set' : '‚ùå Not set');
  
  console.log('- SUPABASE_URL:', process.env.SUPABASE_URL ? '‚úÖ Set' : '‚ùå Not set');
  console.log('- SUPABASE_ANON_KEY:', process.env.SUPABASE_ANON_KEY ? '‚úÖ Set' : '‚ùå Not set');
  console.log('');

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  const testData = {
    driver_id: 'test-driver-001',
    trip_phase: 'morning',
    current_status: 'start_journey',
    location: '‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á',
    notes: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö'
  };

  console.log('üì§ Test Data:');
  console.log(JSON.stringify(testData, null, 2));
  console.log('');

  try {
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API endpoint
    const response = await fetch('http://localhost:3000/api/driver-status-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });

    console.log('üì° API Response Status:', response.status);
    
    const responseData = await response.json();
    console.log('üìã API Response Data:');
    console.log(JSON.stringify(responseData, null, 2));

    if (response.ok) {
      console.log('\n‚úÖ Driver notification test completed successfully!');
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      if (responseData.notification_results) {
        console.log('\nüìä Notification Results:');
        responseData.notification_results.forEach((result, index) => {
          console.log(`${index + 1}. ${result.type}: ${result.status}`);
          if (result.error) {
            console.log(`   Error: ${result.error}`);
          }
        });
      }
    } else {
      console.log('\n‚ùå Driver notification test failed!');
      console.log('Error:', responseData.error || 'Unknown error');
    }

  } catch (error) {
    console.error('\n‚ùå Test failed with error:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Suggestion: Make sure the server is running on http://localhost:3000');
      console.log('   Run: node server-with-webhook.js');
    }
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testDriverNotification().catch(console.error);