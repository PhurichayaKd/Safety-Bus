require('dotenv').config({ path: '../safety-bus-bot/vercel-deploy/.env.local' });

const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Missing Supabase configuration');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function createRfidScanLogsTable() {
  console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á rfid_scan_logs...\n');

  try {
    // ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô SQL query
    const createTableSQL = `
      CREATE TABLE IF NOT EXISTS public.rfid_scan_logs (
          scan_id SERIAL PRIMARY KEY,
          rfid_code VARCHAR(50) NOT NULL,
          driver_id INTEGER,
          student_id INTEGER,
          scan_time TIMESTAMPTZ DEFAULT NOW(),
          latitude DECIMAL(10, 8),
          longitude DECIMAL(11, 8),
          location_type VARCHAR(20) CHECK (location_type IN ('go', 'back')),
          scan_result VARCHAR(20) DEFAULT 'success',
          error_message TEXT,
          created_at TIMESTAMPTZ DEFAULT NOW(),
          updated_at TIMESTAMPTZ DEFAULT NOW()
      );
    `;

    console.log('üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á...');
    
    // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ rpc ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ô SQL
    const { data, error } = await supabase.rpc('exec_sql', { 
      sql_query: createTableSQL 
    });

    if (error) {
      console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô rpc ‡πÑ‡∏î‡πâ:', error.message);
      
      // ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô - ‡πÉ‡∏ä‡πâ Supabase REST API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
      console.log('üîÑ ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...');
      
      // ‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const { data: testData, error: testError } = await supabase
        .from('rfid_scan_logs')
        .select('*')
        .limit(1);

      if (testError) {
        if (testError.message.includes('does not exist')) {
          console.log('‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á rfid_scan_logs ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà');
          console.log('\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
          console.log('1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà Supabase Dashboard');
          console.log('2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor');
          console.log('3. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:');
          console.log('\n' + createTableSQL);
          console.log('\n4. ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ Table Editor ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ä‡∏∑‡πà‡∏≠ "rfid_scan_logs"');
          
          return false;
        } else {
          console.log('‚ö†Ô∏è Error ‡∏≠‡∏∑‡πà‡∏ô:', testError.message);
        }
      } else {
        console.log('‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á rfid_scan_logs ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!');
        return true;
      }
    } else {
      console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', data);
      return true;
    }

  } catch (error) {
    console.error('‚ùå Unexpected error:', error.message);
    return false;
  }
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
createRfidScanLogsTable().then(success => {
  if (success) {
    console.log('\nüéâ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á rfid_scan_logs ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');
  } else {
    console.log('\n‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÉ‡∏ô Supabase Dashboard');
  }
});