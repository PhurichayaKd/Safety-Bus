const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Supabase configuration
const supabaseUrl = 'https://gqyxqxwzjqkqzqzqzqzq.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdxeXhxeHd6anFrcXpxenF6cXpxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczNDUxNzIwMCwiZXhwIjoyMDUwMDkzMjAwfQ.example';

const supabase = createClient(supabaseUrl, supabaseKey);

async function applyDriverBusChanges() {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus ‡πÅ‡∏ó‡∏ô driver_status...');

  try {
    // 1. ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô SQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus
    console.log('üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus...');
    const modifyDriverBusSQL = fs.readFileSync(
      path.join(__dirname, 'modify-driver-bus-table.sql'), 
      'utf8'
    );
    
    const { error: modifyError } = await supabase.rpc('exec_sql', { 
      sql: modifyDriverBusSQL 
    });
    
    if (modifyError) {
      console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus:', modifyError);
      return;
    }
    console.log('‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô update_driver_trip_phase
    console.log('üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô update_driver_trip_phase...');
    const updateTripPhaseSQL = fs.readFileSync(
      path.join(__dirname, 'functions', 'update-driver-trip-phase.sql'), 
      'utf8'
    );
    
    const { error: updateError } = await supabase.rpc('exec_sql', { 
      sql: updateTripPhaseSQL 
    });
    
    if (updateError) {
      console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô update_driver_trip_phase:', updateError);
      return;
    }
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô update_driver_trip_phase ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_driver_current_status
    console.log('üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_driver_current_status...');
    const getStatusSQL = fs.readFileSync(
      path.join(__dirname, 'functions', 'get-driver-current-status.sql'), 
      'utf8'
    );
    
    const { error: getStatusError } = await supabase.rpc('exec_sql', { 
      sql: getStatusSQL 
    });
    
    if (getStatusError) {
      console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_driver_current_status:', getStatusError);
      return;
    }
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_driver_current_status ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // 4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan
    console.log('üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan...');
    const recordRfidSQL = fs.readFileSync(
      path.join(__dirname, 'functions', 'record-rfid-scan-with-driver-bus.sql'), 
      'utf8'
    );
    
    const { error: recordError } = await supabase.rpc('exec_sql', { 
      sql: recordRfidSQL 
    });
    
    if (recordError) {
      console.error('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan:', recordError);
      return;
    }
    console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    console.log('üéâ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!');
    console.log('');
    console.log('üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á:');
    console.log('   ‚úì ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå trip_phase, current_status, is_active ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus');
    console.log('   ‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô update_driver_trip_phase');
    console.log('   ‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_driver_current_status');
    console.log('   ‚úì ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus');
    console.log('');
    console.log('üîß ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô RFID ‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏á‡πÄ‡∏ü‡∏™‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö:', error);
  }
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
function showUsage() {
  console.log('üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
  console.log('');
  console.log('1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Supabase URL ‡πÅ‡∏•‡∏∞ Service Role Key ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ');
  console.log('2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: node apply-driver-bus-changes.js');
  console.log('');
  console.log('üîë API Endpoints ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ:');
  console.log('   ‚Ä¢ POST /rest/v1/rpc/record_rfid_scan');
  console.log('   ‚Ä¢ POST /rest/v1/rpc/update_driver_trip_phase');
  console.log('   ‚Ä¢ POST /rest/v1/rpc/get_driver_current_status');
  console.log('');
}

if (require.main === module) {
  showUsage();
  applyDriverBusChanges();
}

module.exports = { applyDriverBusChanges };