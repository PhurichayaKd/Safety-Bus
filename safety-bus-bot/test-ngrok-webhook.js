// test-ngrok-webhook.js
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ngrok webhook URL ‡πÉ‡∏´‡∏°‡πà

import crypto from 'crypto';

const ngrokUrl = 'https://fb4c9e2d2654.ngrok-free.app';
const channelSecret = '372a023fa2c1575676cfedd3f2d329b9';

// ‡∏™‡∏£‡πâ‡∏≤‡∏á signature ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LINE webhook
function createSignature(body, secret) {
  return crypto
    .createHmac('sha256', secret)
    .update(body)
    .digest('base64');
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ngrok webhook
async function testNgrokWebhook() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ngrok webhook URL');
  console.log('=' .repeat(60));
  console.log(`üîó URL: ${ngrokUrl}/webhook`);
  console.log('');
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: GET request
  console.log('üìç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: GET request');
  try {
    const getResponse = await fetch(`${ngrokUrl}/webhook`, {
      method: 'GET',
      headers: {
        'ngrok-skip-browser-warning': 'true'
      }
    });
    
    console.log(`‚úÖ GET Status: ${getResponse.status}`);
    const getResult = await getResponse.text();
    console.log(`‚úÖ GET Response: ${getResult.substring(0, 100)}...`);
    
  } catch (error) {
    console.log(`‚ùå GET Error: ${error.message}`);
  }
  
  // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2: POST request - Text message
  console.log('\nüìç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2: POST request - Text message');
  
  const textEvent = {
    events: [
      {
        type: 'message',
        message: {
          type: 'text',
          text: '‡πÄ‡∏°‡∏ô‡∏π'
        },
        source: {
          userId: 'U123456789abcdef'
        },
        replyToken: 'test-reply-token-ngrok'
      }
    ]
  };
  
  const body = JSON.stringify(textEvent);
  const signature = createSignature(body, channelSecret);
  
  try {
    const postResponse = await fetch(`${ngrokUrl}/webhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Line-Signature': signature,
        'ngrok-skip-browser-warning': 'true'
      },
      body: body
    });
    
    console.log(`‚úÖ POST Status: ${postResponse.status}`);
    const postResult = await postResponse.json();
    console.log(`‚úÖ POST Response:`, postResult);
    
  } catch (error) {
    console.log(`‚ùå POST Error: ${error.message}`);
  }
  
  console.log('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ngrok:');
  console.log('=' .repeat(60));
  console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç error 404 ‡πÉ‡∏ô LINE Developer Console:');
  console.log('1. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å URL: https://fb4c9e2d2654.ngrok-free.app/webhook');
  console.log('2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà LINE Developer Console');
  console.log('3. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà Messaging API tab');
  console.log('4. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Webhook URL ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡πÉ‡∏´‡∏°‡πà');
  console.log('5. ‡∏Å‡∏î Verify ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
  console.log('6. ‡∏Å‡∏î Update ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
  console.log('');
  console.log('‚ö†Ô∏è  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ngrok URL ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó');
  console.log('üîÑ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ URL ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ ngrok paid plan');
}

testNgrokWebhook().catch(console.error);