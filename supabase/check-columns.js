require('dotenv').config({ path: './driver-app/.env' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Missing Supabase configuration');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkColumns() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö columns ‡πÉ‡∏ô tables...\n');

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö columns ‡πÉ‡∏ô table students
  try {
    console.log('1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö columns ‡πÉ‡∏ô table "students"...');
    const { data, error } = await supabase
      .from('students')
      .select('*')
      .limit(1);
    
    if (error) {
      console.log('‚ùå Error:', error.message);
    } else {
      console.log('‚úÖ Columns ‡πÉ‡∏ô students:', data.length > 0 ? Object.keys(data[0]) : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    }
  } catch (err) {
    console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö columns ‡πÉ‡∏ô v_student_today_status
  try {
    console.log('\n2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö columns ‡πÉ‡∏ô view "v_student_today_status"...');
    const { data, error } = await supabase
      .from('v_student_today_status')
      .select('*')
      .limit(1);
    
    if (error) {
      console.log('‚ùå Error:', error.message);
    } else {
      console.log('‚úÖ Columns ‡πÉ‡∏ô v_student_today_status:', data.length > 0 ? Object.keys(data[0]) : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    }
  } catch (err) {
    console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
  }

  // ‡∏•‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å students ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡πà‡∏≤‡∏á‡πÜ
  console.log('\n3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å students...');
  
  // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ student_id ‡πÅ‡∏ó‡∏ô id
  try {
    const { data, error } = await supabase
      .from('students')
      .select('student_id, name, class')
      .limit(3);
    
    if (error) {
      console.log('‚ùå Error with student_id:', error.message);
    } else {
      console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ student_id ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data.length, 'records');
    }
  } catch (err) {
    console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö student_id:', err.message);
  }
}

checkColumns().catch(console.error);