// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents
import { supabase } from './lib/db.js';

async function checkParentsSchema() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents...');
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents
    const { data: parents, error } = await supabase
      .from('parents')
      .select('*');
    
    if (error) {
      console.error('‚ùå Error:', error);
      return;
    }
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents:');
    console.log(JSON.stringify(parents, null, 2));
    
    if (parents && parents.length > 0) {
      console.log('\nüìã ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á parents:');
      console.log(Object.keys(parents[0]));
    }
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ id = 12
    console.log('\nüîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ id = 12...');
    const { data: parent12, error: parent12Error } = await supabase
      .from('parents')
      .select('*')
      .eq('id', 12)
      .single();
    
    if (parent12Error) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ id = 12:', parent12Error);
    } else {
      console.log('‚úÖ ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ id = 12:');
      console.log(JSON.stringify(parent12, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  }
}

checkParentsSchema();