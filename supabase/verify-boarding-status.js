import { createClient } from '@supabase/supabase-js';

// Supabase configuration
const supabaseUrl = 'https://ugkxolufzlnvjsvtpxhp.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml4cWpxanFqcWpxanFqcWpxanFqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQ0MzQ0MDAsImV4cCI6MjA1MDAxMDQwMH0.abc123def456ghi789jkl012mno345pqr678stu901vwx234yz';

const supabase = createClient(supabaseUrl, supabaseKey);

async function verifyBoardingStatus() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô-‡∏•‡∏á‡∏£‡∏ñ');
    console.log('============================================================');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_boarding_status
    const { data: boardingData, error: boardingError } = await supabase
      .from('student_boarding_status')
      .select(`
        student_id,
        boarding_status,
        driver_id,
        trip_date,
        trip_phase,
        created_at,
        updated_at
      `)
      .order('student_id');

    if (boardingError) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• boarding status ‡πÑ‡∏î‡πâ:', boardingError);
      return;
    }

    console.log(`üìä ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• boarding status: ${boardingData?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);

    if (boardingData && boardingData.length > 0) {
      console.log('üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô-‡∏•‡∏á‡∏£‡∏ñ:');
      console.log('-'.repeat(100));
      console.log('Student ID | Status   | Driver ID | Trip Date  | Phase | Created At');
      console.log('-'.repeat(100));

      boardingData.forEach(item => {
        const createdAt = new Date(item.created_at).toLocaleString('th-TH');
        console.log(`${item.student_id.toString().padEnd(10)} | ${item.boarding_status.padEnd(8)} | ${item.driver_id.toString().padEnd(9)} | ${item.trip_date.padEnd(10)} | ${item.trip_phase.padEnd(5)} | ${createdAt}`);
      });

      console.log('-'.repeat(100));

      // ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      const statusSummary = {};
      boardingData.forEach(item => {
        statusSummary[item.boarding_status] = (statusSummary[item.boarding_status] || 0) + 1;
      });

      console.log('\nüìà ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:');
      Object.entries(statusSummary).forEach(([status, count]) => {
        const emoji = status === 'waiting' ? 'üü°' : 
                     status === 'boarded' ? 'üü¢' : 
                     status === 'dropped' ? 'üîµ' : 
                     status === 'absent' ? 'üî¥' : '‚ö™';
        console.log(`${emoji} ${status}: ${count} ‡∏Ñ‡∏ô`);
      });
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà active
    const { data: studentsData, error: studentsError } = await supabase
      .from('students')
      .select('student_id, student_name, is_active')
      .eq('is_active', true)
      .order('student_id');

    if (studentsError) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ:', studentsError);
      return;
    }

    console.log(`\nüë• ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô active ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${studentsData?.length || 0} ‡∏Ñ‡∏ô`);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏µ boarding status ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (studentsData && boardingData) {
      const studentsWithStatus = boardingData.map(item => item.student_id);
      const studentsWithoutStatus = studentsData.filter(student => 
        !studentsWithStatus.includes(student.student_id)
      );

      if (studentsWithoutStatus.length > 0) {
        console.log('\n‚ö†Ô∏è  ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ boarding status:');
        studentsWithoutStatus.forEach(student => {
          console.log(`   - ${student.student_id}: ${student.student_name}`);
        });
      } else {
        console.log('\n‚úÖ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô active ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏µ boarding status ‡πÅ‡∏•‡πâ‡∏ß');
      }
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• driver
    const { data: driverData, error: driverError } = await supabase
      .from('driver_bus')
      .select('driver_id, driver_name')
      .limit(1);

    if (driverError) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡πÑ‡∏î‡πâ:', driverError);
    } else if (driverData && driverData.length > 0) {
      console.log(`\nüöå ‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${driverData[0].driver_id} - ${driverData[0].driver_name}`);
    }

    console.log('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
    console.log('============================================================');
    
    if (boardingData && studentsData && boardingData.length === studentsData.length) {
      console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('‚úÖ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "waiting" (‡∏£‡∏≠‡∏£‡∏±‡∏ö)');
      console.log('‚úÖ Driver App ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
      
      if (boardingData.every(item => item.boarding_status === 'waiting')) {
        console.log('‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô "waiting" ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      } else {
        console.log('‚ö†Ô∏è  ‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "waiting"');
      }
    } else {
      console.log('‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞ boarding status ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô');
      console.log(`   ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô active: ${studentsData?.length || 0} ‡∏Ñ‡∏ô`);
      console.log(`   Boarding status: ${boardingData?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
verifyBoardingStatus().then(() => {
  console.log('\n‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  process.exit(1);
});