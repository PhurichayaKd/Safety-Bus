import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';
import path from 'path';

// ‡πÇ‡∏´‡∏•‡∏î environment variables
dotenv.config({ path: path.join(process.cwd(), '../safety-bus-bot/vercel-deploy/.env.local') });

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö SUPABASE_URL ‡∏´‡∏£‡∏∑‡∏≠ SUPABASE_SERVICE_ROLE_KEY');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testLineDirectly() {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô LINE ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á...\n');

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏≤‡∏¢ format ‡∏Ç‡∏≠‡∏á LINE User ID
    const testCases = [
        {
            name: 'Format 1: 33 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£',
            userId: 'U1234567890abcdef1234567890abcdef12',
            message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö Format 1'
        },
        {
            name: 'Format 2: 32 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£',
            userId: 'U1234567890abcdef1234567890abcdef',
            message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö Format 2'
        },
        {
            name: 'Format 3: ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å LINE Documentation',
            userId: 'Udeadbeefdeadbeefdeadbeefdeadbeef',
            message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö Format 3'
        }
    ];

    for (const testCase of testCases) {
        console.log(`üì± ${testCase.name}:`);
        console.log(`   User ID: ${testCase.userId} (${testCase.userId.length} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)`);
        
        try {
            const { data: result, error } = await supabase.rpc('send_line_notification', {
                p_line_user_id: testCase.userId,
                p_message: testCase.message
            });

            if (error) {
                console.log(`   ‚ùå Error: ${error.message}`);
            } else {
                console.log(`   ‚úÖ Result:`, JSON.stringify(result, null, 2));
            }
        } catch (err) {
            console.log(`   ‚ùå Exception: ${err.message}`);
        }
        
        console.log();
    }

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ User ID ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    console.log('üì± ‡∏ó‡∏î‡∏™‡∏≠‡∏ö User ID ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:');
    try {
        const { data: result, error } = await supabase.rpc('send_line_notification', {
            p_line_user_id: 'invalid_user_id',
            p_message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö User ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
        });

        if (error) {
            console.log(`   ‚ùå Error: ${error.message}`);
        } else {
            console.log(`   Result:`, JSON.stringify(result, null, 2));
        }
    } catch (err) {
        console.log(`   ‚ùå Exception: ${err.message}`);
    }
}

testLineDirectly().catch(console.error);