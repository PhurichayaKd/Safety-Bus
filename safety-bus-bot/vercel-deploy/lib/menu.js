import { sendLineMessage, replyLineMessage } from './line.js';
import { getStudentByLineId } from './student-data.js';

// Rich Menu configuration
const mainRichMenu = {
  size: {
    width: 2500,
    height: 1686
  },
  selected: false,
  name: "Safety Bus Main Menu",
  chatBarText: "Menu",
  areas: [
    {
      bounds: {
        x: 0,
        y: 0,
        width: 1250,
        height: 843
      },
      action: {
        type: "postback",
        data: "action=history",
        displayText: "üìä ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
      }
    },
    {
      bounds: {
        x: 1250,
        y: 0,
        width: 1250,
        height: 843
      },
      action: {
        type: "postback",
        data: "action=leave",
        displayText: "üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤"
      }
    },
    {
      bounds: {
        x: 0,
        y: 843,
        width: 1250,
        height: 843
      },
      action: {
        type: "postback",
        data: "action=location",
        displayText: "üöå ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ"
      }
    },
    {
      bounds: {
        x: 1250,
        y: 843,
        width: 1250,
        height: 843
      },
      action: {
        type: "postback",
        data: "action=contact",
        displayText: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö"
      }
    }
  ]
};

// Quick Reply objects (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ)

const driverQuickReply = {
  items: [
    {
      type: "action",
      action: {
        type: "postback",
        label: "üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        data: "action=driver_student_info",
        displayText: "üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üöå ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ‡∏ö‡∏±‡∏™",
        data: "action=location",
        displayText: "üöå ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ‡∏ö‡∏±‡∏™"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        data: "action=contact",
        displayText: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        data: "action=change_student",
        displayText: "üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
      }
    }
  ]
};

const leaveQuickReply = {
  items: [
    {
      type: "action",
      action: {
        type: "postback",
        label: "ü§í Sick Leave",
        data: "leave_type=sick",
        displayText: "ü§í Sick Leave"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üìö Personal Leave",
        data: "leave_type=personal",
        displayText: "üìö Personal Leave"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üè† Absent",
        data: "leave_type=absent",
        displayText: "üè† Absent"
      }
    },
    {
      type: "action",
      action: {
        type: "postback",
        label: "üîô Back to Main Menu",
        data: "action=main_menu",
        displayText: "üîô Back to Main Menu"
      }
    }
  ]
};

/**
 * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏° Quick Reply
 * @param {string} userId - LINE User ID
 * @param {Object} message - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á
 * @param {Object} quickReply - Quick Reply object
 * @param {string} replyToken - Reply token (optional)
 */
export async function sendMessageWithQuickReply(userId, message, quickReply, replyToken = null) {
  const messageWithQuickReply = {
    ...message,
    quickReply: quickReply
  };

  if (replyToken) {
    return await replyLineMessage(replyToken, messageWithQuickReply);
  } else {
    return await sendLineMessage(userId, messageWithQuickReply);
  }
}



/**
 * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Rich Menu
 * @param {string} userId - LINE User ID
 * @param {string} replyToken - Reply token (optional)
 * @param {Object} options - Additional options (optional)
 */
export async function sendMainMenu(userId, replyToken, options = {}) {
  console.log(`sendMainMenu called for user: ${userId}, replyToken: ${replyToken}`);
  
  let menuText = 'üöå ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å\n\n1. ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥\n2. ‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î\n3. ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏£‡∏ñ\n4. ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö\n\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°';
  
  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ welcomeText ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏°‡∏ô‡∏π
  if (options.welcomeText) {
    menuText = options.welcomeText + '\n\n' + menuText;
  }
  
  const menuMessage = {
    type: 'text',
    text: menuText
    // ...‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° quick reply ‡∏´‡∏£‡∏∑‡∏≠ rich menu ‡πÑ‡∏î‡πâ...
  };
  
  try {
    if (replyToken) {
      await replyLineMessage(replyToken, menuMessage);
    } else {
      // fallback: push message
      await sendLineMessage(userId, menuMessage);
    }
  } catch (err) {
    console.error('Error in sendMainMenu:', err);
  }
}



export {
  mainRichMenu,
  driverQuickReply,
  leaveQuickReply
};