import 'dotenv/config';
import { supabase } from './lib/db.js';

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
 */
async function checkLinkedUsers() {
  console.log('üîç Checking for linked users in the database...\n');

  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö student_line_links
    console.log('üìö Student Line Links:');
    const { data: studentLinks, error: studentError } = await supabase
      .from('student_line_links')
      .select(`
        *,
        students (
          student_name,
          student_id,
          grade
        )
      `)
      .eq('active', true)
      .not('line_user_id', 'is', null);

    if (studentError) {
      console.error('‚ùå Error fetching student links:', studentError);
    } else if (studentLinks && studentLinks.length > 0) {
      studentLinks.forEach((link, index) => {
        console.log(`${index + 1}. Student: ${link.students?.student_name || 'Unknown'}`);
        console.log(`   User ID: ${link.line_user_id || 'Not set'}`);
        console.log(`   Display ID: ${link.line_display_id || 'Not set'}`);
        console.log(`   Grade: ${link.students?.grade || 'Unknown'}`);
        console.log(`   Linked At: ${link.linked_at || 'Unknown'}`);
        console.log('');
      });
    } else {
      console.log('   ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß');
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö parent_line_links
    console.log('\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ Parent Line Links:');
    const { data: parentLinks, error: parentError } = await supabase
      .from('parent_line_links')
      .select(`
        *,
        parents (
          parent_name,
          phone_number
        ),
        students (
          student_name,
          student_id,
          grade
        )
      `)
      .eq('active', true)
      .not('line_user_id', 'is', null);

    if (parentError) {
      console.error('‚ùå Error fetching parent links:', parentError);
    } else if (parentLinks && parentLinks.length > 0) {
      parentLinks.forEach((link, index) => {
        console.log(`${index + 1}. Parent: ${link.parents?.parent_name || 'Unknown'}`);
        console.log(`   Student: ${link.students?.student_name || 'Unknown'}`);
        console.log(`   User ID: ${link.line_user_id || 'Not set'}`);
        console.log(`   Display ID: ${link.line_display_id || 'Not set'}`);
        console.log(`   Phone: ${link.parents?.phone_number || 'Unknown'}`);
        console.log(`   Linked At: ${link.linked_at || 'Unknown'}`);
        console.log('');
      });
    } else {
      console.log('   ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß');
    }

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    const totalStudents = studentLinks?.length || 0;
    const totalParents = parentLinks?.length || 0;
    const totalLinked = totalStudents + totalParents;

    console.log('\nüìä Summary:');
    console.log(`Total linked students: ${totalStudents}`);
    console.log(`Total linked parents: ${totalParents}`);
    console.log(`Total linked users: ${totalLinked}`);

    if (totalLinked > 0) {
      console.log('\nüí° ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ User ID ‡πÉ‡∏î‡πÜ ‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö');
      console.log('   ‡πÇ‡∏î‡∏¢‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå test-contact-driver-linked-user.js');
    } else {
      console.log('\n‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
      console.log('   ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    }

  } catch (error) {
    console.error('‚ùå Error checking linked users:', error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
checkLinkedUsers();