const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');
require('dotenv').config({ path: '../safety-bus-bot/vercel-deploy/.env.local' });

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö SUPABASE_URL ‡∏´‡∏£‡∏∑‡∏≠ SUPABASE_ANON_KEY ‡πÉ‡∏ô environment variables');
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .env.local ‡πÉ‡∏ô safety-bus-bot/vercel-deploy/');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function updateFunction() {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡πÉ‡∏ô Supabase...\n');
    
    try {
        // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå SQL
        const sqlPath = path.join(__dirname, 'final-fixed-function.sql');
        const sqlContent = fs.readFileSync(sqlPath, 'utf8');
        
        console.log('üìÑ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå final-fixed-function.sql ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        console.log('üìù ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô:');
        console.log('   - ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recipient_type ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å notification_logs');
        console.log('   - ‡πÉ‡∏ä‡πâ error_details ‡πÅ‡∏ó‡∏ô metadata');
        console.log('   - ‡πÉ‡∏ä‡πâ event_type ‡πÄ‡∏õ‡πá‡∏ô "pickup" ‡∏ï‡∏≤‡∏° constraint');
        console.log('   - ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á event_local_date ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô GENERATED column\n');
        
        // ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL
        const { data, error } = await supabase.rpc('exec', {
            sql: sqlContent
        });
        
        if (error) {
            // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ñ‡πâ‡∏≤ exec ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ rpc exec ‡πÑ‡∏î‡πâ, ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...');
            
            // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ from().select() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ô SQL
            const { data: result, error: sqlError } = await supabase
                .from('_dummy_')
                .select('*')
                .limit(0);
                
            // ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ raw SQL ‡∏ú‡πà‡∏≤‡∏ô PostgREST
            const response = await fetch(`${supabaseUrl}/rest/v1/rpc/exec`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${supabaseKey}`,
                    'apikey': supabaseKey
                },
                body: JSON.stringify({ sql: sqlContent })
            });
            
            if (!response.ok) {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏î‡πâ:', response.statusText);
                console.log('\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á:');
                console.log('1. ‡πÄ‡∏õ‡∏¥‡∏î Supabase Dashboard');
                console.log('2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor');
                console.log('3. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå final-fixed-function.sql');
                console.log('4. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡πÉ‡∏ô Dashboard');
                return;
            }
            
            console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ú‡πà‡∏≤‡∏ô HTTP API');
        } else {
            console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ú‡πà‡∏≤‡∏ô RPC');
        }
        
        console.log('\nüéâ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß!');
        console.log('üìã ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:');
        console.log('   ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á');
        console.log('   ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ recipient_type ‡πÅ‡∏•‡∏∞ metadata');
        console.log('   ‚úÖ ‡πÉ‡∏ä‡πâ event_type ‡πÄ‡∏õ‡πá‡∏ô "pickup" ‡∏ï‡∏≤‡∏° constraint');
        console.log('   ‚úÖ ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á event_local_date ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô GENERATED column');
        console.log('   ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç pickup_source ‡πÄ‡∏õ‡πá‡∏ô NULL ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ constraint ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞ NULL');
        
    } catch (err) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
        console.log('\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á:');
        console.log('1. ‡πÄ‡∏õ‡∏¥‡∏î Supabase Dashboard');
        console.log('2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor');
        console.log('3. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå final-fixed-function.sql');
        console.log('4. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡πÉ‡∏ô Dashboard');
    }
}

updateFunction();