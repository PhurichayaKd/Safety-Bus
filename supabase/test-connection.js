require('dotenv').config({ path: '../driver-app/.env' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('тЭМ Missing Supabase configuration');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testConnection() {
  console.log('ЁЯФН р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н Supabase...\n');

  try {
    console.log('1я╕ПтГг р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н table "driver_bus"...');
    const { data, error } = await supabase
      .from('driver_bus')
      .select('count')
      .limit(1);
    
    if (error) {
      console.log('тЭМ р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:', error.message);
      return false;
    } else {
      console.log('тЬЕ р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕кр╕│р╣Ар╕гр╣Зр╕И!');
      console.log('ЁЯУК р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ъ:', data);
      return true;
    }
  } catch (err) {
    console.log('тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н:', err.message);
    return false;
  }
}

testConnection()
  .then(success => {
    if (success) {
      console.log('\nЁЯОЙ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕кр╕│р╣Ар╕гр╣Зр╕И! NetworkMonitor р╕Др╕зр╕гр╕Чр╕│р╕Зр╕▓р╕Щр╣Др╕Фр╣Йр╕Ыр╕Бр╕Хр╕┤р╣Бр╕ер╣Йр╕з');
    } else {
      console.log('\nтЭМ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
    }
  })
  .catch(console.error);