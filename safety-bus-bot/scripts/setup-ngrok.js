import { spawn } from 'child_process';
import { Client } from '@line/bot-sdk';
import dotenv from 'dotenv';
import axios from 'axios';

dotenv.config();

const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET,
};

const client = new Client(config);

console.log('üöÄ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ngrok ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL');
console.log('==================================================');

async function setupNgrok() {
  console.log('üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:');
  console.log('1. üîß ‡πÄ‡∏£‡∏¥‡πà‡∏° ngrok tunnel');
  console.log('2. üåê ‡∏î‡∏∂‡∏á public URL');
  console.log('3. üìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï webhook URL ‡πÉ‡∏ô LINE');
  console.log('4. ‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠\n');
  
  console.log('‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:');
  console.log('1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ngrok ‡∏Å‡πà‡∏≠‡∏ô: npm install -g ngrok');
  console.log('2. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å terminal ‡∏´‡∏ô‡∏∂‡πà‡∏á: ngrok http 3000');
  console.log('3. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å HTTPS URL ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô https://abc123.ngrok.io)');
  console.log('4. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà LINE Developers Console');
  console.log('5. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL ‡πÄ‡∏õ‡πá‡∏ô: https://abc123.ngrok.io/webhook');
  console.log('6. ‡∏Å‡∏î "Verify" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
  console.log('7. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô "Use webhook"\n');
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ngrok API
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ngrok tunnels ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà...');
  try {
    const response = await axios.get('http://localhost:4040/api/tunnels');
    const tunnels = response.data.tunnels;
    
    if (tunnels.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ngrok tunnel ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà');
      console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ngrok http 3000');
      return;
    }
    
    // ‡∏´‡∏≤ HTTPS tunnel
    const httpsTunnel = tunnels.find(tunnel => tunnel.proto === 'https');
    if (!httpsTunnel) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö HTTPS tunnel');
      return;
    }
    
    const ngrokUrl = httpsTunnel.public_url;
    const webhookUrl = `${ngrokUrl}/webhook`;
    
    console.log(`‚úÖ ‡∏û‡∏ö ngrok tunnel: ${ngrokUrl}`);
    console.log(`üéØ Webhook URL: ${webhookUrl}`);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    console.log('\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...');
    try {
      const testResponse = await axios.get(`${ngrokUrl}/health`);
      console.log(`‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Status: ${testResponse.status})`);
    } catch (error) {
      console.log(`‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
      return;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï webhook
    console.log('\nüìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL:');
    console.log('1. ‡πÄ‡∏Ç‡πâ‡∏≤ https://developers.line.biz/');
    console.log('2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì');
    console.log('3. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Messaging API > Webhook settings');
    console.log(`4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL ‡πÄ‡∏õ‡πá‡∏ô: ${webhookUrl}`);
    console.log('5. ‡∏Å‡∏î "Update"');
    console.log('6. ‡∏Å‡∏î "Verify" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    console.log('7. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô "Use webhook"');
    
    console.log('\nüéâ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß:');
    console.log('- ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô Rich Menu ‡∏ö‡∏ô‡πÅ‡∏≠‡∏õ LINE');
    console.log('- ‡∏î‡∏π logs ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
    console.log('- ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô "üåê [Webhook Event Received]"');
    
  } catch (error) {
    if (error.code === 'ECONNREFUSED') {
      console.log('‚ùå ngrok ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
      console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ngrok http 3000');
    } else {
      console.log(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
setupNgrok()
  .catch(error => {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:', error.message);
  });