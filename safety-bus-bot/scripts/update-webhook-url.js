import { Client } from '@line/bot-sdk';
import dotenv from 'dotenv';
import axios from 'axios';

dotenv.config();

const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET,
};

const client = new Client(config);

console.log('üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL ‡πÉ‡∏ô LINE Bot');
console.log('==================================================');

async function updateWebhookUrl() {
  try {
    // ‡∏î‡∏∂‡∏á ngrok URL
    console.log('üîç ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ngrok tunnel...');
    const response = await axios.get('http://localhost:4040/api/tunnels');
    const tunnels = response.data.tunnels;
    
    if (tunnels.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ngrok tunnel');
      console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ngrok http 3000');
      return;
    }
    
    const httpsTunnel = tunnels.find(tunnel => tunnel.proto === 'https');
    if (!httpsTunnel) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö HTTPS tunnel');
      return;
    }
    
    const ngrokUrl = httpsTunnel.public_url;
    const webhookUrl = `${ngrokUrl}/webhook`;
    
    console.log(`‚úÖ ‡∏û‡∏ö ngrok URL: ${ngrokUrl}`);
    console.log(`üéØ Webhook URL: ${webhookUrl}`);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô
    console.log('\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...');
    try {
      const testResponse = await axios.get(`${ngrokUrl}/health`);
      console.log(`‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (Status: ${testResponse.status})`);
    } catch (error) {
      console.log(`‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
      return;
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï webhook URL
    console.log('\nüìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL...');
    try {
      await client.setWebhookEndpointUrl(webhookUrl);
      console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (error) {
      console.log(`‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Webhook URL ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
      console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÉ‡∏ô LINE Developers Console');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...');
    try {
      const webhookInfo = await client.getWebhookEndpointInfo();
      console.log(`üìç Webhook URL ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${webhookInfo.endpoint}`);
      console.log(`‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${webhookInfo.active ? '‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}`);
      
      if (webhookInfo.endpoint === webhookUrl) {
        console.log('üéâ Webhook URL ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
      } else {
        console.log('‚ö†Ô∏è Webhook URL ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö');
      }
    } catch (error) {
      console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• webhook: ${error.message}`);
    }
    
  } catch (error) {
    if (error.code === 'ECONNREFUSED') {
      console.log('‚ùå ngrok ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
      console.log('üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ngrok http 3000');
    } else {
      console.log(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
updateWebhookUrl()
  .then(() => {
    console.log('\nüì± ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:');
    console.log('1. ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ LINE ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠');
    console.log('2. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö Bot');
    console.log('3. ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô Rich Menu');
    console.log('4. ‡∏î‡∏π logs ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
    console.log('5. ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô "üåê [Webhook Event Received]"');
    
    console.log('\nüîß ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:');
    console.log('- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "Use webhook" ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô LINE Developers Console');
    console.log('- ‡∏•‡∏≠‡∏á "Verify" webhook URL ‡πÉ‡∏ô LINE Developers Console');
    console.log('- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Rich Menu ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE');
  })
  .catch(error => {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:', error.message);
  });