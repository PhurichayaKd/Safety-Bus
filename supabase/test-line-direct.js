import dotenv from 'dotenv';
import path from 'path';

// р╣Вр╕лр╕ер╕Ф environment variables
dotenv.config({ path: path.join(process.cwd(), '../safety-bus-bot/vercel-deploy/.env.local') });

const lineToken = process.env.LINE_CHANNEL_ACCESS_TOKEN;
const testLineUserId = 'Uabcb2efe95a311ba539fb52290683692'; // LINE User ID р╕Вр╕нр╕Зр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ 100014

if (!lineToken) {
    console.error('тЭМ р╣Др╕бр╣Ир╕Юр╕Ъ LINE_CHANNEL_ACCESS_TOKEN');
    process.exit(1);
}

async function testLineNotification() {
    console.log('ЁЯУ▒ р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ LINE р╣Вр╕Фр╕вр╕Хр╕гр╕З...');
    console.log('ЁЯФС LINE Token:', lineToken.substring(0, 20) + '...');
    console.log('ЁЯСд LINE User ID:', testLineUserId);
    
    const message = 'ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ RFID\n' +
                   'тП░ р╣Ар╕зр╕ер╕▓: ' + new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' }) + '\n' +
                   'тЬЕ р╕гр╕░р╕Ър╕Ър╕Чр╕│р╕Зр╕▓р╕Щр╕Ыр╕Бр╕Хр╕┤';

    try {
        const response = await fetch('https://api.line.me/v2/bot/message/push', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${lineToken}`
            },
            body: JSON.stringify({
                to: testLineUserId,
                messages: [{
                    type: 'text',
                    text: message
                }]
            })
        });

        console.log('ЁЯУК HTTP Status:', response.status);
        
        if (response.ok) {
            console.log('тЬЕ р╕кр╣Ир╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ LINE р╕кр╕│р╣Ар╕гр╣Зр╕И!');
            console.log('ЁЯУЭ р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕кр╣Ир╕З:', message);
            return true;
        } else {
            const errorText = await response.text();
            console.error('тЭМ р╕кр╣Ир╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ LINE р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
            console.error('ЁЯУК Status:', response.status);
            console.error('ЁЯУД Response:', errorText);
            return false;
        }

    } catch (error) {
        console.error('тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ:', error);
        return false;
    }
}

// р╕гр╕▒р╕Щр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ
testLineNotification().then(success => {
    if (success) {
        console.log('\nЁЯОЙ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ LINE notification р╕кр╕│р╣Ар╕гр╣Зр╕И!');
        console.log('ЁЯТб р╕Хр╕нр╕Щр╕Щр╕╡р╣Йр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Бр╕Бр╕Щ RFID р╣Др╕Фр╣Йр╣Бр╕ер╣Йр╕з');
    } else {
        console.log('\nтЭМ р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ LINE notification р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
        console.log('ЁЯТб р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ LINE access token р╣Бр╕ер╕░ User ID');
    }
    process.exit(success ? 0 : 1);
});