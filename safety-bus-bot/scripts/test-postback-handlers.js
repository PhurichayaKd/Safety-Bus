import dotenv from 'dotenv';
import { handlePostback, handleMainAction } from '../lib/handlers.js';

dotenv.config();

console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Postback Handlers ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
console.log('==================================================');

// Mock event objects ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const mockEvents = [
  {
    name: 'Travel History',
    event: {
      type: 'postback',
      postback: {
        data: 'action=history'
      },
      source: {
        userId: 'test-user-id'
      },
      replyToken: 'test-reply-token'
    }
  },
  {
    name: 'Leave Request',
    event: {
      type: 'postback',
      postback: {
        data: 'action=leave'
      },
      source: {
        userId: 'test-user-id'
      },
      replyToken: 'test-reply-token'
    }
  },
  {
    name: 'Bus Location',
    event: {
      type: 'postback',
      postback: {
        data: 'action=location'
      },
      source: {
        userId: 'test-user-id'
      },
      replyToken: 'test-reply-token'
    }
  },
  {
    name: 'Contact Driver',
    event: {
      type: 'postback',
      postback: {
        data: 'action=contact'
      },
      source: {
        userId: 'test-user-id'
      },
      replyToken: 'test-reply-token'
    }
  }
];

async function testPostbackHandlers() {
  for (const test of mockEvents) {
    console.log(`\nüîÑ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ${test.name}`);
    console.log('------------------------------');
    console.log(`üì§ ‡∏™‡πà‡∏á postback: ${test.event.postback.data}`);
    
    try {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handlePostback ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
      await handlePostback(test.event);
      console.log(`‚úÖ ${test.name} - ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
    } catch (error) {
      console.log(`‚ùå ${test.name} - ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:`, error.message);
    }
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testPostbackHandlers()
  .then(() => {
    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Postback Handlers ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('- ‚úÖ Postback handlers ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
    console.log('- ‚úÖ Rich Menu ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß');
    console.log('- ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Rich Menu ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô LINE Bot ‡∏à‡∏£‡∏¥‡∏á');
    console.log('\nüí° ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô LINE Bot:');
    console.log('   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Rich Menu ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
    console.log('   2. ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô Rich Menu ‡πÅ‡∏•‡∏∞‡∏î‡∏π logs ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
    console.log('   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö webhook URL ‡πÉ‡∏ô LINE Developers Console');
  })
  .catch(error => {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', error);
  });