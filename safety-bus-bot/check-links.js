import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_ANON_KEY
);

async function checkLinks() {
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á...');
  
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô parent_line_links
    console.log('\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô parent_line_links:');
    const { data: parentLinks, error: parentError } = await supabase
      .from('parent_line_links')
      .select('*');
    
    if (parentError) {
      console.log('‚ùå Error:', parentError.message);
    } else {
      console.log('‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', parentLinks?.length || 0);
      parentLinks?.forEach((link, index) => {
        console.log(`${index + 1}. ID: ${link.id || link.link_id}, Parent ID: ${link.parent_id}, LINE User: ${link.line_user_id}, Active: ${link.active}`);
      });
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô student_line_links
    console.log('\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô student_line_links:');
    const { data: studentLinks, error: studentError } = await supabase
      .from('student_line_links')
      .select('*');
    
    if (studentError) {
      console.log('‚ùå Error:', studentError.message);
    } else {
      console.log('‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', studentLinks?.length || 0);
      studentLinks?.forEach((link, index) => {
        console.log(`${index + 1}. ID: ${link.id || link.link_id}, Student ID: ${link.student_id}, LINE User: ${link.line_user_id}, Active: ${link.active}`);
      });
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô driver_line_links
    console.log('\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô driver_line_links:');
    const { data: driverLinks, error: driverError } = await supabase
      .from('driver_line_links')
      .select('*');
    
    if (driverError) {
      console.log('‚ùå Error:', driverError.message);
    } else {
      console.log('‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', driverLinks?.length || 0);
      driverLinks?.forEach((link, index) => {
        console.log(`${index + 1}. ID: ${link.id}, Student ID: ${link.student_id}, LINE User: ${link.line_user_id}, Driver: ${link.driver_name}, Active: ${link.is_active}`);
      });
    }
    
  } catch (error) {
    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
}

checkLinks();