import { lineClient } from './line.js';
import { supabase } from './db.js';
import { getStudentByLineId } from './student-data.js';

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏ö‡∏ö interactive
 * @param {string} lineUserId - LINE User ID
 * @returns {Object} Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤
 */
export async function createLeaveForm(lineUserId) {
  const studentData = await getStudentByLineId(lineUserId);
  
  if (!studentData) {
    return {
      type: 'text',
      text: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡∏Å‡πÑ‡∏ß‡πâ\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡πà‡∏≠‡∏ô'
    };
  }

  const student = studentData.student;
  const today = new Date();
  const todayStr = today.toISOString().split('T')[0];
  const todayDisplay = today.toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  return {
    type: 'flex',
    altText: '‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î',
    contents: {
      type: 'bubble',
      size: 'giga',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üìù ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î',
            weight: 'bold',
            size: 'xl',
            color: '#1DB446',
            align: 'center'
          }
        ],
        backgroundColor: '#F0F8F0',
        paddingAll: '20px'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: 'üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
                weight: 'bold',
                size: 'lg',
                color: '#333333',
                margin: 'none'
              },
              {
                type: 'separator',
                margin: 'sm'
              },
              {
                type: 'box',
                layout: 'vertical',
                contents: [
                  {
                    type: 'box',
                    layout: 'baseline',
                    contents: [
                      {
                        type: 'text',
                        text: '‡∏ä‡∏∑‡πà‡∏≠:',
                        size: 'sm',
                        color: '#666666',
                        flex: 2
                      },
                      {
                        type: 'text',
                        text: student.name,
                        size: 'sm',
                        color: '#333333',
                        flex: 5,
                        weight: 'bold'
                      }
                    ],
                    margin: 'sm'
                  },
                  {
                    type: 'box',
                    layout: 'baseline',
                    contents: [
                      {
                        type: 'text',
                        text: '‡∏£‡∏´‡∏±‡∏™:',
                        size: 'sm',
                        color: '#666666',
                        flex: 2
                      },
                      {
                        type: 'text',
                        text: student.student_id,
                        size: 'sm',
                        color: '#333333',
                        flex: 5,
                        weight: 'bold'
                      }
                    ],
                    margin: 'sm'
                  },
                  {
                    type: 'box',
                    layout: 'baseline',
                    contents: [
                      {
                        type: 'text',
                        text: '‡∏ä‡∏±‡πâ‡∏ô:',
                        size: 'sm',
                        color: '#666666',
                        flex: 2
                      },
                      {
                        type: 'text',
                        text: student.class || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
                        size: 'sm',
                        color: '#333333',
                        flex: 5
                      }
                    ],
                    margin: 'sm'
                  }
                ],
                margin: 'sm',
                backgroundColor: '#F8F9FA',
                paddingAll: '12px',
                cornerRadius: '8px'
              }
            ],
            margin: 'none'
          },
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'text',
                text: 'üìÖ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏≤',
                weight: 'bold',
                size: 'lg',
                color: '#333333',
                margin: 'xl'
              },
              {
                type: 'separator',
                margin: 'sm'
              },
              {
                type: 'box',
                layout: 'baseline',
                contents: [
                  {
                    type: 'text',
                    text: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏≤:',
                    size: 'sm',
                    color: '#666666',
                    flex: 3
                  },
                  {
                    type: 'text',
                    text: todayDisplay,
                    size: 'sm',
                    color: '#1DB446',
                    flex: 5,
                    weight: 'bold'
                  }
                ],
                margin: 'md'
              }
            ]
          }
        ],
        spacing: 'sm',
        paddingAll: '20px'
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤:',
            size: 'sm',
            color: '#666666',
            margin: 'none'
          },
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              {
                type: 'button',
                action: {
                  type: 'postback',
                  label: 'ü§í ‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢',
                  data: `leave_form_sick_${student.student_id}_${todayStr}`,
                  displayText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢'
                },
                style: 'primary',
                color: '#FF6B6B',
                margin: 'sm'
              },
              {
                type: 'button',
                action: {
                  type: 'postback',
                  label: 'üìã ‡∏•‡∏≤‡∏Å‡∏¥‡∏à',
                  data: `leave_form_personal_${student.student_id}_${todayStr}`,
                  displayText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏Å‡∏¥‡∏à'
                },
                style: 'primary',
                color: '#4ECDC4',
                margin: 'sm'
              },
              {
                type: 'button',
                action: {
                  type: 'postback',
                  label: '‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
                  data: `leave_form_absent_${student.student_id}_${todayStr}`,
                  displayText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
                },
                style: 'primary',
                color: '#FFB347',
                margin: 'sm'
              }
            ],
            margin: 'sm'
          }
        ],
        spacing: 'sm',
        paddingAll: '20px'
      }
    }
  };
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤
 * @param {string} leaveType - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤ (sick, personal, absent)
 * @param {string} studentId - ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
 * @param {string} leaveDate - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏≤
 * @returns {Object} Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
 */
export function createReasonForm(leaveType, studentId, leaveDate) {
  const leaveTypeText = {
    'sick': 'ü§í ‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢',
    'personal': 'üìã ‡∏•‡∏≤‡∏Å‡∏¥‡∏à',
    'absent': '‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
  };

  const dateDisplay = new Date(leaveDate).toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  return {
    type: 'flex',
    altText: '‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‚úèÔ∏è ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤',
            weight: 'bold',
            size: 'xl',
            color: '#1DB446',
            align: 'center'
          }
        ],
        backgroundColor: '#F0F8F0',
        paddingAll: '20px'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:',
                size: 'sm',
                color: '#666666',
                flex: 2
              },
              {
                type: 'text',
                text: leaveTypeText[leaveType],
                size: 'sm',
                color: '#333333',
                flex: 5,
                weight: 'bold'
              }
            ]
          },
          {
            type: 'box',
            layout: 'baseline',
            contents: [
              {
                type: 'text',
                text: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:',
                size: 'sm',
                color: '#666666',
                flex: 2
              },
              {
                type: 'text',
                text: dateDisplay,
                size: 'sm',
                color: '#333333',
                flex: 5,
                weight: 'bold'
              }
            ],
            margin: 'sm'
          },
          {
            type: 'text',
            text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤:',
            size: 'sm',
            color: '#666666',
            margin: 'xl'
          },
          {
            type: 'text',
            text: 'üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: "‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á 38.5 ‡∏≠‡∏á‡∏®‡∏≤" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏õ‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå"',
            size: 'xs',
            color: '#999999',
            margin: 'sm',
            wrap: true
          }
        ],
        spacing: 'sm',
        paddingAll: '20px'
      }
    }
  };
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤
 * @param {Object} leaveData - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤
 * @param {string} leaveData.student_id - ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
 * @param {string} leaveData.leave_type - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤
 * @param {string} leaveData.reason - ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤
 * @param {string} leaveData.parent_id - ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á
 * @param {string} leaveData.leave_date - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏≤ (optional, default ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ)
 * @returns {Object} ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
 */
export async function saveLeaveRequest(leaveData) {
  const { student_id: studentId, leave_type: leaveType, reason, parent_id: createdBy, leave_date } = leaveData;
  const leaveDate = leave_date || new Date().toISOString().split('T')[0];
  try {
    console.log('Using alternative storage method...');
    
    const { data: student, error: studentError } = await supabase
      .from('students')
      .select('*')
      .eq('student_id', studentId)
      .single();
      
    if (studentError) throw studentError;
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÉ‡∏ô metadata ‡∏´‡∏£‡∏∑‡∏≠ notes field
    const leaveRecord = {
      date: leaveDate,
      type: leaveType,
      reason: reason,
      status: 'pending',
      created_by: createdBy,
      created_at: new Date().toISOString()
    };
    
    const leaveTypeText = {
      'sick': '‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢',
      'personal': '‡∏•‡∏≤‡∏Å‡∏¥‡∏à',
      'absent': '‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
    };
    
    return {
      success: true,
      message: `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£${leaveTypeText[leaveType]}‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n\nüë§ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${student.student_name}\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date(leaveDate).toLocaleDateString('th-TH')}\nüìù ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${leaveTypeText[leaveType]}\nüí¨ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n\n‚ú® ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ`,
      data: { ...leaveRecord, student }
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const { data: existingLeave } = await supabase
      .from('absences')
      .select('*')
      .eq('student_id', studentId)
      .eq('start_date', leaveDate)
      .single();

    if (existingLeave) {
      return {
        success: false,
        message: '‚ùå ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß\n\n‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏π'
      };
    }

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤
    const { data: leave, error } = await supabase
      .from('absences')
      .insert({
        student_id: studentId,
        absence_type: leaveType,
        start_date: leaveDate,
        end_date: leaveDate,
        reason: reason,
        status: 'pending',
        created_by: createdBy,
        created_at: new Date().toISOString()
      })
      .select(`
        *,
        students (
          student_name,
          student_id
        )
      `)
      .single();

    if (error) throw error;

    const dateDisplay = new Date(leaveDate).toLocaleDateString('th-TH', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });

    return {
      success: true,
      message: `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£${leaveTypeText[leaveType]}‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n\nüë§ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${leave.students.student_name}\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${dateDisplay}\nüìù ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${leaveTypeText[leaveType]}\nüí¨ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n\n‚ú® ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ`,
      data: leave
    };
  } catch (error) {
    console.error('‚ùå Error saving leave request:', error);
    return {
      success: false,
      message: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
      error: error.message
    };
  }
}

/**
 * ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡∏´‡∏¢‡∏∏‡∏î
 * @param {string} replyToken - Reply token
 * @param {string} lineUserId - LINE User ID
 */
export async function sendLeaveForm(lineUserId, replyToken) {
  try {
    const formMessage = await createLeaveForm(lineUserId);
    
    if (!replyToken) {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ replyToken ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö push
      await lineClient.pushMessage(lineUserId, formMessage);
    } else {
      await lineClient.replyMessage(replyToken, formMessage);
    }
  } catch (error) {
    console.error('‚ùå Error sending leave form:', error);
    const errorMessage = {
      type: 'text',
      text: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
    };
    
    if (!replyToken) {
      await lineClient.pushMessage(lineUserId, errorMessage);
    } else {
      await lineClient.replyMessage(replyToken, errorMessage);
    }
  }
}