const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '../safety-bus-bot/vercel-deploy/.env.local' });

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);

async function testFixedFunction() {
  const rfidCode = 'F3C9DC34';
  const driverId = 1; // ‡πÉ‡∏ä‡πâ driver ID ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß...\n');
  
  // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Query ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß (‡πÉ‡∏ä‡πâ IN ('assigned', 'available'))
  console.log('1Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Query ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß:');
  
  const { data: students, error: studentsError } = await supabase
    .from('students')
    .select(`
      student_id,
      student_name,
      is_active,
      rfid_card_assignments!inner(
        is_active,
        valid_to,
        rfid_cards!inner(
          card_id,
          rfid_code,
          is_active,
          status
        )
      )
    `)
    .eq('rfid_card_assignments.rfid_cards.rfid_code', rfidCode)
    .eq('rfid_card_assignments.is_active', true)
    .eq('rfid_card_assignments.rfid_cards.is_active', true)
    .in('rfid_card_assignments.rfid_cards.status', ['assigned', 'available'])
    .eq('is_active', true);
    
  if (studentsError) {
    console.error('‚ùå Query Error:', studentsError.message);
  } else {
    console.log('‚úÖ ‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:', students);
    
    if (students.length > 0) {
      const student = students[0];
      console.log(`   Student ID: ${student.student_id}`);
      console.log(`   Student Name: ${student.student_name}`);
      console.log(`   Card Status: ${student.rfid_card_assignments[0].rfid_cards.status}`);
    }
  }
  
  console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan:');
  
  // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
  const { data: functionResult, error: functionError } = await supabase
    .rpc('record_rfid_scan', {
      p_rfid_code: rfidCode,
      p_driver_id: driverId,
      p_latitude: 13.7563,
      p_longitude: 100.5018,
      p_location_type: 'pickup'
    });
    
  if (functionError) {
    console.error('‚ùå Function Error:', functionError.message);
  } else {
    console.log('üìã Function Result:', functionResult);
  }
  
  console.log('\nüìù ‡∏™‡∏£‡∏∏‡∏õ:');
  console.log('   - Query ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ');
  console.log('   - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï');
  console.log('   - ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô Supabase Dashboard');
  
  console.log('\nüîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
  console.log('1. ‡πÄ‡∏Ç‡πâ‡∏≤ Supabase Dashboard');
  console.log('2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà SQL Editor');
  console.log('3. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå record-rfid-scan.sql');
  console.log('4. ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 44: AND rc.status = \'assigned\' ‡πÄ‡∏õ‡πá‡∏ô AND rc.status IN (\'assigned\', \'available\')');
}

testFixedFunction().catch(console.error);