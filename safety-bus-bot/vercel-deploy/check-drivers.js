import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

dotenv.config({ path: '.env.local' });

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_ANON_KEY
);

async function checkDrivers() {
  console.log('üîç Checking drivers in database...\n');

  try {
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const { data: drivers, error } = await supabase
      .from('driver_bus')
      .select('*')
      .limit(10);

    if (error) {
      console.error('‚ùå Error fetching drivers:', error);
      return;
    }

    console.log(`üìä Found ${drivers.length} drivers in database:`);
    
    if (drivers.length === 0) {
      console.log('‚ö†Ô∏è  No drivers found in database');
      console.log('\nüí° Suggestions:');
      console.log('1. Add test driver data to the database');
      console.log('2. Check if the drivers table exists');
      console.log('3. Verify database connection');
    } else {
      console.log('\nüìã Driver List:');
      drivers.forEach((driver, index) => {
        console.log(`${index + 1}. ID: ${driver.id || driver.driver_id}`);
        console.log(`   Name: ${driver.name || driver.driver_name || 'N/A'}`);
        console.log(`   Status: ${driver.status || 'N/A'}`);
        console.log(`   Created: ${driver.created_at || 'N/A'}`);
        console.log('');
      });

      // ‡πÉ‡∏ä‡πâ driver ‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
      const firstDriver = drivers[0];
      const driverId = firstDriver.id || firstDriver.driver_id;
      
      console.log(`üß™ Testing with driver ID: ${driverId}`);
      
      // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      await testNotificationWithDriver(driverId);
    }

  } catch (error) {
    console.error('‚ùå Unexpected error:', error);
  }
}

async function testNotificationWithDriver(driverId) {
  console.log(`\nüì§ Testing notification with driver ID: ${driverId}`);
  
  const testData = {
    driver_id: driverId,
    trip_phase: 'morning',
    current_status: 'start_journey',
    location: '‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á',
    notes: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö'
  };

  try {
    const response = await fetch('http://localhost:3000/api/driver-status-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });

    console.log('üì° API Response Status:', response.status);
    
    const responseData = await response.json();
    console.log('üìã API Response Data:');
    console.log(JSON.stringify(responseData, null, 2));

    if (response.ok) {
      console.log('\n‚úÖ Notification test successful!');
      
      if (responseData.notification_results) {
        console.log('\nüìä Notification Results:');
        responseData.notification_results.forEach((result, index) => {
          console.log(`${index + 1}. ${result.type}: ${result.status}`);
          if (result.error) {
            console.log(`   Error: ${result.error}`);
          }
        });
      }
    } else {
      console.log('\n‚ùå Notification test failed!');
    }

  } catch (error) {
    console.error('\n‚ùå Test failed:', error.message);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
checkDrivers().catch(console.error);