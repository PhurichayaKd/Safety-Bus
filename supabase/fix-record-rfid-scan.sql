-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô record_rfid_scan ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£ SELECT ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ú‡∏¥‡∏î
-- ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: v_driver_status ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ is_active (boolean) ‡πÅ‡∏ó‡∏ô current_status (string)

DROP FUNCTION IF EXISTS record_rfid_scan(VARCHAR, INTEGER, NUMERIC, NUMERIC, VARCHAR);

CREATE OR REPLACE FUNCTION record_rfid_scan(
  p_rfid_code VARCHAR,
  p_driver_id INTEGER,
  p_latitude NUMERIC DEFAULT NULL,
  p_longitude NUMERIC DEFAULT NULL,
  p_location_type VARCHAR DEFAULT 'pickup'
) RETURNS JSON AS $$
DECLARE
  v_student_id INTEGER;
  v_line_user_id TEXT;
  v_student_name VARCHAR;
  v_driver_name VARCHAR;
  v_record_id INTEGER;
  v_scan_id BIGINT;
  v_existing_scan INTEGER;
  v_today DATE;
  v_trip_phase TEXT;
  v_status_id BIGINT;
  v_driver_trip_phase TEXT;
  v_driver_status TEXT;
  v_driver_is_active BOOLEAN;  -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö is_active
  notification_message TEXT;
  line_result JSON;
  line_notified BOOLEAN := false;
BEGIN
  -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢)
  v_today := (NOW() AT TIME ZONE 'Asia/Bangkok')::DATE;
  
  -- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î trip_phase ‡∏à‡∏≤‡∏Å location_type (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö CHECK constraint ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
  v_trip_phase := CASE 
    WHEN p_location_type = 'pickup' THEN 'go'
    WHEN p_location_type = 'dropoff' THEN 'back'
    WHEN p_location_type IN ('go') THEN 'go'  -- backward compatibility
    WHEN p_location_type IN ('return', 'back') THEN 'back'  -- backward compatibility
    ELSE 'go'
  END;
  
  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á driver_bus (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)
  SELECT 
    driver_name, 
    trip_phase, 
    current_status,
    is_active
  INTO v_driver_name, v_driver_trip_phase, v_driver_status, v_driver_is_active
  FROM driver_bus 
  WHERE driver_id = p_driver_id;

  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏û‡∏ö‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  IF v_driver_name IS NULL THEN
    RETURN json_build_object(
      'success', false, 
      'error', '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö',
      'driver_id', p_driver_id
    );
  END IF;

  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  IF v_driver_status != 'active' THEN
    RETURN json_build_object(
      'success', false, 
      'error', '‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô',
      'driver_status', v_driver_status,
      'is_active', v_driver_is_active,
      'debug_info', 'Fixed: v_driver_status should be current_status, not is_active'
    );
  END IF;

  -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï trip_phase ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô
  UPDATE driver_bus 
  SET 
    trip_phase = p_location_type,
    current_latitude = COALESCE(p_latitude, current_latitude),
    current_longitude = COALESCE(p_longitude, current_longitude),
    current_updated_at = NOW() AT TIME ZONE 'Asia/Bangkok'
  WHERE driver_id = p_driver_id;
  
  -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ student_id ‡∏à‡∏≤‡∏Å RFID code
  SELECT 
    s.student_id, 
    s.student_name
  INTO v_student_id, v_student_name
  FROM students s
  JOIN rfid_card_assignments rca ON s.student_id = rca.student_id
  JOIN rfid_cards rc ON rca.card_id = rc.card_id
  WHERE rc.rfid_code = p_rfid_code
    AND rca.is_active = true
    AND rc.is_active = true
    AND rc.status IN ('assigned', 'available')
    AND s.is_active = true
    AND (rca.valid_to IS NULL OR rca.valid_to > NOW())
  LIMIT 1;

  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  IF v_student_id IS NULL THEN
    RETURN json_build_object(
      'success', false, 
      'error', '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï',
      'rfid_code', p_rfid_code
    );
  END IF;

  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö trip_phase ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
  SELECT COUNT(*)
  INTO v_existing_scan
  FROM rfid_scan_logs rsl
  WHERE rsl.student_id = v_student_id
    AND DATE(rsl.scan_time AT TIME ZONE 'Asia/Bangkok') = v_today
    AND rsl.location_type = v_trip_phase;

  -- ‡∏ñ‡πâ‡∏≤‡∏™‡πÅ‡∏Å‡∏ô‡∏ã‡πâ‡∏≥ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
  IF v_existing_scan > 0 THEN
    RETURN json_build_object(
      'success', true,
      'already_scanned', true,
      'student_name', v_student_name,
      'message', '‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÉ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ',
      'trip_phase', v_trip_phase
    );
  END IF;

  -- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô RFID
  INSERT INTO rfid_scan_logs (
    student_id, 
    driver_id, 
    rfid_code,
    scan_time, 
    location_type,
    latitude, 
    longitude
  ) VALUES (
    v_student_id, 
    p_driver_id, 
    p_rfid_code,
    NOW() AT TIME ZONE 'Asia/Bangkok', 
    v_trip_phase,
    p_latitude, 
    p_longitude
  ) RETURNING scan_id INTO v_scan_id;

  -- ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÉ‡∏ä‡πâ 'boarded' ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

  -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô-‡∏•‡∏á‡∏£‡∏ñ (‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
  INSERT INTO student_boarding_status (
    student_id,
    driver_id,
    trip_date,
    trip_phase,
    boarding_status,
    pickup_time,
    last_scan_id
  ) VALUES (
    v_student_id,
    p_driver_id,
    v_today,
    v_trip_phase,
    'boarded',
    NOW() AT TIME ZONE 'Asia/Bangkok',
    v_scan_id
  )
  ON CONFLICT (student_id, driver_id, trip_date, trip_phase)
  DO UPDATE SET
    boarding_status = 'boarded',
    pickup_time = NOW() AT TIME ZONE 'Asia/Bangkok',
    last_scan_id = v_scan_id,
    updated_at = NOW() AT TIME ZONE 'Asia/Bangkok'
  RETURNING status_id INTO v_status_id;

  -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ LINE User ID ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á student_line_links
  SELECT line_user_id 
  INTO v_line_user_id
  FROM student_line_links
  WHERE student_id = v_student_id 
    AND active = true
  LIMIT 1;

  -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö LINE User ID ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á
  IF v_line_user_id IS NULL THEN
    SELECT pll.line_user_id 
    INTO v_line_user_id
    FROM students s
    JOIN parent_line_links pll ON s.parent_id = pll.parent_id
    WHERE s.student_id = v_student_id 
      AND pll.active = true
    LIMIT 1;
  END IF;

  -- ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ LINE User ID)
  IF v_line_user_id IS NOT NULL AND v_line_user_id != '' THEN
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    notification_message := CASE 
      WHEN v_trip_phase = 'go' THEN 
        'üöå ' || v_student_name || ' ‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏ñ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß' || E'\n' ||
        '‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ' || TO_CHAR(NOW() AT TIME ZONE 'Asia/Bangkok', 'HH24:MI ‡∏ô.') || E'\n' ||
        'üë®‚Äç‚úàÔ∏è ‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö: ' || v_driver_name || E'\n' ||
        'üõ£Ô∏è ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: ‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
      WHEN v_trip_phase = 'back' THEN 
        'üè† ' || v_student_name || ' ‡∏•‡∏á‡∏£‡∏ñ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß' || E'\n' ||
        '‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ' || TO_CHAR(NOW() AT TIME ZONE 'Asia/Bangkok', 'HH24:MI ‡∏ô.') || E'\n' ||
        'üë®‚Äç‚úàÔ∏è ‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö: ' || v_driver_name || E'\n' ||
        'üõ£Ô∏è ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: ‡∏™‡πà‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'
      ELSE 
        'üìç ' || v_student_name || ' ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÅ‡∏•‡πâ‡∏ß' || E'\n' ||
        '‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ' || TO_CHAR(NOW() AT TIME ZONE 'Asia/Bangkok', 'HH24:MI ‡∏ô.') || E'\n' ||
        'üë®‚Äç‚úàÔ∏è ‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö: ' || v_driver_name
    END;

    -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á LINE notification
    BEGIN
      SELECT send_line_notification(v_line_user_id, notification_message) INTO line_result;
      line_notified := true;
    EXCEPTION WHEN OTHERS THEN
      line_notified := false;
      line_result := json_build_object('success', false, 'error', SQLERRM);
    END;
  END IF;

  -- ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö
  RETURN json_build_object(
    'success', true,
    'student_name', v_student_name,
    'driver_name', v_driver_name,
    'trip_phase', v_trip_phase,
    'boarding_status', 'boarded',
    'scan_id', v_scan_id,
    'status_id', v_status_id,
    'line_notified', line_notified,
    'line_result', line_result,
    'message', '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô RFID ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
  );

EXCEPTION WHEN OTHERS THEN
  RETURN json_build_object(
    'success', false, 
    'error', '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' || SQLERRM,
    'sqlstate', SQLSTATE
  );
END;
$$ LANGUAGE plpgsql;