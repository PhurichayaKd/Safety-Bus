// test-liff-flow.js
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á LIFF leave form

async function testLIFFFlow() {
  const baseUrl = 'http://localhost:3000';
  const testUserId = 'U123456789abcdef'; // LINE User ID ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö LIFF Leave Form Flow');
  console.log('=' .repeat(50));
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
  console.log('\nüìç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°');
  try {
    const formResponse = await fetch(`${baseUrl}/link/leave-form`);
    console.log(`‚úÖ Form Status: ${formResponse.status}`);
    
    const formContent = await formResponse.text();
    if (formContent.includes('2008065330-v2l2xgeD')) {
      console.log('‚úÖ LIFF ID ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß');
    } else {
      console.log('‚ùå LIFF ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà');
    }
    
    if (formContent.includes('/api/student-info')) {
      console.log('‚úÖ API endpoint ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    }
    
  } catch (error) {
    console.log(`‚ùå Error accessing form: ${error.message}`);
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2: API student-info (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ)
  console.log('\nüìç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API student-info (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ)');
  try {
    const studentInfoResponse = await fetch(`${baseUrl}/api/student-info`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        idToken: 'test-token',
        userId: 'unlinked-user-id' 
      })
    });
    
    const studentInfoResult = await studentInfoResponse.json();
    console.log(`‚úÖ Status: ${studentInfoResponse.status}`);
    console.log(`‚úÖ Response:`, studentInfoResult);
    
    if (!studentInfoResult.success && studentInfoResult.message.includes('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ')) {
      console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    }
    
  } catch (error) {
    console.log(`‚ùå Error testing student-info: ${error.message}`);
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 3: API student-info (‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ)
  console.log('\nüìç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API student-info (‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ)');
  try {
    const linkedUserResponse = await fetch(`${baseUrl}/api/student-info`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        idToken: 'test-token',
        userId: 'U123456789abcdef' // User ID ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
      })
    });
    
    const linkedUserResult = await linkedUserResponse.json();
    console.log(`‚úÖ Status: ${linkedUserResponse.status}`);
    console.log(`‚úÖ Response:`, linkedUserResult);
    
  } catch (error) {
    console.log(`‚ùå Error testing linked user: ${error.message}`);
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 4: API submit-leave
  console.log('\nüìç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API submit-leave');
  try {
    const leaveData = {
      student_id: 5,
      leave_type: 'sick',
      leave_date: new Date().toISOString().split('T')[0],
      reason: '‡∏õ‡πà‡∏ß‡∏¢‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î',
      parent_id: 5
    };
    
    const submitResponse = await fetch(`${baseUrl}/api/submit-leave`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(leaveData)
    });
    
    const submitResult = await submitResponse.json();
    console.log(`‚úÖ Status: ${submitResponse.status}`);
    console.log(`‚úÖ Response:`, submitResult);
    
  } catch (error) {
    console.log(`‚ùå Error testing submit-leave: ${error.message}`);
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 5: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS headers
  console.log('\nüìç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS headers');
  try {
    const corsResponse = await fetch(`${baseUrl}/api/student-info`, {
      method: 'OPTIONS'
    });
    
    console.log(`‚úÖ OPTIONS Status: ${corsResponse.status}`);
    console.log(`‚úÖ CORS Headers:`);
    console.log(`   - Access-Control-Allow-Origin: ${corsResponse.headers.get('Access-Control-Allow-Origin')}`);
    console.log(`   - Access-Control-Allow-Methods: ${corsResponse.headers.get('Access-Control-Allow-Methods')}`);
    console.log(`   - Access-Control-Allow-Headers: ${corsResponse.headers.get('Access-Control-Allow-Headers')}`);
    
  } catch (error) {
    console.log(`‚ùå Error testing CORS: ${error.message}`);
  }
  
  console.log('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
  console.log('- ‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°: ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞ LIFF ID ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà');
  console.log('- API student-info: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏î‡πâ');
  console.log('- API submit-leave: ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤');
  console.log('- CORS: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö cross-origin requests');
  console.log('\nüí° ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ERR_NGROK_3200:');
  console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ngrok URL ‡πÉ‡∏ô LINE Developer Console');
  console.log('2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LIFF URL endpoint');
  console.log('3. ‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ú‡πà‡∏≤‡∏ô ngrok URL ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
}

testLIFFFlow().catch(console.error);